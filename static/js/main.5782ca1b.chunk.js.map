{"version":3,"sources":["components/HighScores/HighScores.js","components/MyScore/MyScore.js","components/Button/Button.js","App.js","index.js"],"names":["GET_HIGHSCORES","gql","_templateObject","Object","taggedTemplateLiteral","HighScores","_useSubscription","useSubscription","loading","error","data","react_default","a","createElement","console","player","map","p","key","username","score","GET_MYSCORE","MyScore_templateObject","MyScore","INCREMENT_MYSCORE","Button_templateObject","Button","_useMutation","useMutation","incrementMyScore","slicedToArray","type","onClick","App","_useState","useState","ApolloClient","link","WebSocketLink","uri","options","reconnect","connectionParams","headers","x-hasura-admin-secret","process","cache","InMemoryCache","client","ApolloProvider","className","components_HighScores_HighScores","components_Button_Button","components_MyScore_MyScore","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"2QAGMA,EAAiBC,YAAHC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,2IA+BLE,EAtBI,WAAM,IAAAC,EACUC,YAAgBP,GAAzCQ,EADeF,EACfE,QAASC,EADMH,EACNG,MAAOC,EADDJ,EACCI,KAExB,OAAIF,EACKG,EAAAC,EAAAC,cAAA,yBAELJ,GACFK,QAAQL,MAAMA,GACPE,EAAAC,EAAAC,cAAA,sBAGLH,EACKA,EAAKK,OAAOC,IAAI,SAACC,GACtB,OACEN,EAAAC,EAAAC,cAAA,OAAKK,IAAKD,EAAEE,UACVR,EAAAC,EAAAC,cAAA,SAAII,EAAEE,SAAN,IAAiBF,EAAEG,eAJ3B,GCpBIC,EAAcpB,YAAHqB,MAAAnB,OAAAC,EAAA,EAAAD,CAAA,gJA6BFoB,EAnBC,WAAM,IAAAjB,EACeC,YAAgBc,GAAzCb,EADUF,EACVE,QAASC,EADCH,EACDG,MAAOC,EADNJ,EACMI,KAExB,OAAIF,EACOG,EAAAC,EAAAC,cAAA,yBAEPJ,GACAK,QAAQL,MAAMA,GACPE,EAAAC,EAAAC,cAAA,sBAEPH,EAAKK,OAAO,GAERJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAIH,EAAKK,OAAO,GAAGI,SAAnB,cAAwCT,EAAKK,OAAO,GAAGK,aAHnE,WCpBEI,EAAoBvB,YAAHwB,MAAAtB,OAAAC,EAAA,EAAAD,CAAA,0LAmBRuB,EATA,WAAM,IAAAC,EACUC,YAAYJ,GAAhCK,EADU1B,OAAA2B,EAAA,EAAA3B,CAAAwB,EAAA,MAGjB,OACIhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQkB,KAAK,SAASC,QAASH,GAA/B,cCsBGI,EAdH,WAAM,IAAAC,EACCC,mBAjBV,IAAIC,IAAa,CACtBC,KAAM,IAAIC,IAAc,CACtBC,IAAK,iDACLC,QAAS,CACPC,WAAW,EACXC,iBAAkB,CAChBC,QAAS,CACPC,wBAAyBC,YAKjCC,MAAO,IAAIC,OAKNC,EADS7C,OAAA2B,EAAA,EAAA3B,CAAA+B,EAAA,MAEhB,OACEvB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAgBD,OAAQA,GACtBrC,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,OACbvC,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAACsC,EAAD,MACAxC,EAAAC,EAAAC,cAACuC,EAAD,MACAzC,EAAAC,EAAAC,cAACwC,EAAD,SC9BKC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/C,EAAAC,EAAAC,cAACF,EAAAC,EAAM+C,WAAP,KACEhD,EAAAC,EAAAC,cAAC+C,EAAD","file":"static/js/main.5782ca1b.chunk.js","sourcesContent":["import { gql, useSubscription } from '@apollo/client';\r\nimport React from 'react';\r\n\r\nconst GET_HIGHSCORES = gql`\r\n    subscription MyQuery {\r\n      player(limit: 10, order_by: {score: desc}) {\r\n        username\r\n        score\r\n      }\r\n    }\r\n`;\r\n\r\nconst HighScores = () => {\r\n  const { loading, error, data } = useSubscription(GET_HIGHSCORES);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  if (error) {\r\n    console.error(error);\r\n    return <div>Error!</div>;\r\n  }\r\n\r\n  if (data) {\r\n    return data.player.map((p) => {\r\n      return (\r\n        <div key={p.username}>\r\n          <p>{p.username}-{p.score}</p>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n};\r\n\r\nexport default HighScores;\r\n","import { gql, useSubscription } from '@apollo/client';\r\nimport React from 'react';\r\n\r\nconst GET_MYSCORE = gql`\r\n    subscription MyQuery {\r\n        player(where: {username: {_eq: \"Ravindu\"}}) {\r\n        username\r\n        score\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst MyScore = () => {\r\n    const { loading, error, data } = useSubscription(GET_MYSCORE);\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    if (error) {\r\n        console.error(error);\r\n        return <div>Error!</div>;\r\n    }\r\n    if (data.player[0]) {\r\n        return (\r\n            <div>\r\n                <p>{data.player[0].username}'s score - {data.player[0].score}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyScore;\r\n","import { gql, useMutation } from '@apollo/client';\r\nimport React from 'react';\r\n\r\nconst INCREMENT_MYSCORE = gql`\r\n    mutation MyMutation {\r\n        update_player(where: {username: {_eq: \"Ravindu\"}}, _inc: {score: 1}) {\r\n        returning {\r\n            score\r\n        }\r\n        }\r\n    }\r\n`;\r\n\r\nconst Button = () => {\r\n    const [incrementMyScore] = useMutation(INCREMENT_MYSCORE);\r\n\r\n    return (\r\n        <div>\r\n            <button type=\"button\" onClick={incrementMyScore}>Click Me</button>\r\n        </div>\r\n    )\r\n};\r\nexport default Button;","import React, { useState } from 'react';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\r\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\r\n\r\nimport \"./App.css\";\r\nimport HighScores from './components/HighScores/HighScores';\r\nimport MyScore from './components/MyScore/MyScore';\r\nimport Button from './components/Button/Button';\r\n\r\nconst createApolloClient = () => {\r\n  return new ApolloClient({\r\n    link: new WebSocketLink({\r\n      uri: 'wss://simplest-game-ever.hasura.app/v1/graphql',\r\n      options: {\r\n        reconnect: true,\r\n        connectionParams: {\r\n          headers: {\r\n            'x-hasura-admin-secret': process.env.REACT_APP_X_HASURA_ADMIN_SECRET\r\n          }\r\n        }\r\n      }\r\n    }),\r\n    cache: new InMemoryCache(),\r\n  });\r\n};\r\n\r\nconst App = () => {\r\n  const [client] = useState(createApolloClient());\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <div className=\"App\">\r\n        <h1>Simplest Game Ever</h1>\r\n        <HighScores />\r\n        <Button />\r\n        <MyScore />\r\n      </div>\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}